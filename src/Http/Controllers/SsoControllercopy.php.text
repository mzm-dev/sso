<?php

namespace Mzm\Sso\Http\Controllers;

use App\Http\Controllers\Controller;
use App\Models\User;
use Illuminate\Http\JsonResponse;
use Illuminate\Support\Facades\Auth;

class SsoController extends Controller
{
    public function __invoke()
    {
        if(Auth::guard('web')->check()) {
            return redirect()->route('home');
        }
        $bearer_token = false;

        $home = config('sso.home') ?? abort(404, 'Opps!!!. Mising config sso'); //route('home');
        $apiUrl = config('sso.api_url') ?? abort(404, 'Opps!!!. Mising config sso'); //'https://sso.ns.test';
        $sso_origin = config('sso.origin') ?? abort(404, 'Opps!!!. Mising config sso'); //'irekod.ns.test';
        $sso_token = config('sso.token') ?? abort(404, 'Opps!!!. Mising config sso'); //'24e24fbd-ac63-47cd-adef-c28cf799f793';

        $url = "{$apiUrl}/api/user";

        if (isset($_COOKIE['access_token'])) {
            $bearer_token = urldecode($_COOKIE['access_token']);
        }

        if (!$bearer_token) {
            logger('$_COOKIE access_token is null');
        }


        $ch = curl_init();

        curl_setopt_array($ch, [
            CURLOPT_URL => $url,
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_HTTPHEADER => [
                'Accept: application/json',
                "Authorization: Bearer {$bearer_token}",
                "X-Client-Origin: {$sso_origin}",
                "X-Client-Token: {$sso_token}",
            ],
            CURLOPT_SSL_VERIFYPEER => false,
        ]);

        $response = curl_exec($ch);
        $result = json_decode($response, true);
        // dump($result, $response);
        // dd($bearer_token, $sso_origin, $sso_token, $url, $home);
        /** Curl error */
        if ($response === false) {
            curl_close($ch);
            return abort(403, 'Curl error: ' . curl_error($ch));
        }

        curl_close($ch);

        /** Success */
        if (isset($result['success'])) {
            /** store user data */

            $user = $result['data']['user'];

            $user = User::where('email', $user['email'])->first();


            if ($user && Auth::guard('web')->loginUsingId($user->id)) {

                return redirect()->route('home')->with('success', 'Login successful!');

                // return request()->wantsJson()
                //     ? new JsonResponse([], 204)
                //     : redirect()->intended($home);
            } else {
                /** return 401 error */
                return abort(401, 'Sila hubungi pentadir sistem.');
            }
        } else if (isset($result['error'])) {
            /** Error */
            return abort(403, $result['error']);
        } else {
            return abort(403, [curl_error($ch), $response]);
        }
    }
}
